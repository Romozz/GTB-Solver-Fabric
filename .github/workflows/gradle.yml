name: Java CI with Gradle and Minecraft Client Mod CI with Fabric

on:
  workflow_dispatch:  # Запуск вручную

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Настройка Gradle
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    # Даем разрешение на выполнение gradlew
    - name: Grant execute permissions to gradlew
      run: chmod +x ./gradlew

    # Кэширование зависимостей Gradle
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # Собираем Minecraft мод с помощью Gradle
    - name: Build Minecraft mod with Gradle Wrapper
      run: ./gradlew build

    # Загружаем артефакт мода (например, .jar файл) как артефакт GitHub
    - name: Upload mod jar as artifact
      uses: actions/upload-artifact@v4
      with:
        name: minecraft-mod
        path: build/libs/*.jar

  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: build  # Задача test будет ждать завершения задачи build

    steps:
    - uses: actions/checkout@v4

    # Устанавливаем Docker
    - name: Set up Docker
      run: |
        sudo apt-get remove docker docker-engine docker.io containerd runc
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository \
          "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) \
          stable"
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io

    # Скачиваем артефакт мода
    - name: Download mod jar artifact
      uses: actions/download-artifact@v4
      with:
        name: minecraft-mod
        path: ./mod

    # Проверяем содержимое директории mod после загрузки артефакта
    - name: List contents of mod directory
      run: ls -l ./mod

    # Строим Docker образ с Minecraft клиентом и модом
    - name: Build Minecraft client with Fabric and mod
      run: |
        docker build -t minecraft-fabric-client --build-arg MOD_PATH=./mod/GTB-Solver-Fabric-1.0.0.jar .

    # Запускаем Minecraft клиент с модом
    - name: Run Minecraft client with mod
      run: |
        docker run -d --name minecraft-client minecraft-fabric-client

    # Ожидаем загрузки Minecraft и модов
    - name: Wait for Minecraft to start
      run: sleep 60

    # Отправляем команду в Minecraft
    - name: Send /gtb a___з to Minecraft chat
      run: |
        docker exec -it minecraft-client /bin/bash -c "echo '/gtb a___з' > /minecraft/logs/latest.log" # Эмуляция команды

    # Проверяем результат в логе
    - name: Check Minecraft logs for output
      run: |
        docker logs minecraft-client | grep "Possible words for 'a___з'" # Проверяем логи на результат команды
